[package]
name = "das-tree-backfiller"
version = { workspace = true }
edition = { workspace = true }
repository = { workspace = true }
publish = { workspace = true }

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html


[lib]

[[bin]]
name = "das-tree-backfiller"

[dependencies]

anchor-client = { workspace = true }
anchor-lang = { workspace = true }
anyhow = { workspace = true }
backon = "0.4.1"
base64 = { workspace = true }
borsh = { workspace = true }
bs58 = { workspace = true }
cadence = { workspace = true }
cadence-macros = { workspace = true }
chrono = { workspace = true }
clap = { workspace = true, features = ["derive", "cargo", "env"] }
digital_asset_types = { workspace = true }
env_logger = { workspace = true }
figment = { workspace = true, features = ["env", "toml", "yaml"] }
flatbuffers = { workspace = true }
futures = { workspace = true }
futures-util = { workspace = true }
indicatif = "0.17.5"
lazy_static = { workspace = true }
log = { workspace = true }
mpl-bubblegum = { workspace = true }
plerkle_messenger = { workspace = true, features = ['redis'] }
plerkle_serialization = { workspace = true }
redis = { workspace = true, features = [
  "aio",
  "tokio-comp",
  "streams",
  "tokio-native-tls-comp",
] }
regex = { workspace = true }
reqwest = { workspace = true }
rust-crypto = { workspace = true }
sea-orm = { workspace = true, features = [
  "macros",
  "runtime-tokio-rustls",
  "sqlx-postgres",
  "with-chrono",
  "mock",
] }
sea-query = { workspace = true, features = ["postgres-array"] }
serde = { workspace = true }
serde_json = { workspace = true }
solana-account-decoder = { workspace = true }
solana-client = { workspace = true }
solana-sdk = { workspace = true }
solana-transaction-status = { workspace = true }
spl-account-compression = { workspace = true }
spl-concurrent-merkle-tree = { workspace = true }
sqlx = { workspace = true, features = [
  "macros",
  "runtime-tokio-rustls",
  "postgres",
  "uuid",
  "offline",
  "json",
] }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["full", "tracing"] }
tokio-postgres = { workspace = true }
url = { workspace = true }
uuid = { workspace = true }

[lints]
workspace = true
